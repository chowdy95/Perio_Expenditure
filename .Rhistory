mutate(
PerioProp = selected_Mean_total_billions / Dent_exp_usd,
median_value = median(PerioProp),
Rank = rank(selected_Mean_total_billions),
selected_model = factor(selected_model, levels = c("high", "mid", "low")),
ModelLabel = recode(selected_model,
high = "High Utilisation",
mid = "Medium Utilisation",
low = "Low Utilisation"
)
) %>%
filter(PerioProp < 1)
# Define shapes and colors
shapes <- c(high = 17, mid = 18, low = 15)
colors <- brewer.pal(3, "Pastel1")
names(colors) <- c("high", "mid", "low")
# Create plot
p <- ggplot(df, aes(x = Rank, y = PerioProp * 100, color = selected_model, shape = selected_model)) +
geom_point(aes(size = Dent_exppc_usd), alpha = 0.8) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_color_manual(
name = "Dental Utilisation",
values = colors,
labels = c("High Utilisation", "Medium Utilisation", "Low Utilisation")
) +
scale_shape_manual(
name = "Dental Utilisation",
values = shapes,
labels = c("High Utilisation", "Medium Utilisation", "Low Utilisation")
) +
scale_size_continuous(
name = "Dental Expenditure Per Capita (USD)",
range = c(0.05, 5),
labels = scales::dollar
) +
labs(
title = "Estimated Periodontal Expenditure as a Share of Total Dental Spending",
subtitle = "Across countries, periodontal expenditure forms a reasonable proportion of total dental spending,\nincreasing with dental expenditure per capita, supporting the plausibility of the estimation model",
x = "Countries ranked by periodontal expenditure",
y = "Periodontal expenditure (% of dental spending)"
) +
theme_minimal(base_family = "sans") +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 10),
legend.position = "bottom",
legend.box = "vertical",
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
plot.margin = margin(30, 30, 30, 30)
)
# Save as PDF
ggsave(
filename = "outputs/periodontal_prop_scatter.pdf",
plot = p,
width = 10,
height = 6.5,
device = cairo_pdf # Ensures font rendering works well with showtext
)
#------------------------------------------------------------------------------------------
# Graph investigating the effect of dental expenditure per capita on utilisation
#------------------------------------------------------------------------------------------
library(tidyverse)
# Load data
df <- read_csv("outputs/short_final_selected_output.csv") %>%
filter(Country != "Global", selected_Mean_total_billions != 0) %>%
mutate(
PerioProp = selected_Mean_total_billions / Dent_exp_usd,
median_value = median(PerioProp),
Rank = rank(selected_Mean_total_billions),
selected_model = factor(selected_model, levels = c("high", "mid", "low")),
ModelLabel = recode(selected_model,
high = "High Utilisation",
mid = "Medium Utilisation",
low = "Low Utilisation"
)
)
jitter_plot <- ggplot(df, aes(x = selected_model, y = Dent_exppc_usd, color = selected_model)) +
geom_jitter(width = 0.2, size = 2, alpha = 0.9) +
scale_color_brewer(palette = "Pastel1") +
labs(
x = "Dental Utilisation Scenario",
y = "Dental Expenditure per Capita (USD)",
title = "Dental Expenditure Per Capita by Utilisation Scenario",
subtitle = ""
) +
theme_minimal(base_family = "sans") +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 10),
legend.position = "bottom",
legend.box = "vertical",
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
plot.margin = margin(30, 40, 40, 30)
)
# Save as PNG
ggsave(
filename = "outputs/jitter_dental_expenditure_against_scenario.pdf",
plot = jitter_plot,
width = 9,
height = 8,
dpi = 300
)
ggplot(df, aes(x = selected_model, y = GDP_per_capita_PPP_2021, color = selected_model)) +
geom_jitter(width = 0.2, size = 2, alpha = 0.6) +
scale_color_brewer(palette = "Pastel1") +
labs(
x = "Dental Utilisation Scenario",
y = "Dental Expenditure per Capita (USD)",
title = "Per-Capita Dental Expenditure by Utilisation Scenario"
) +
theme_minimal()
library(tidyverse)
library(treemapify)
# Load your data
df <- read_csv("outputs/global_procedure.csv") %>%
mutate(
Procedure = recode(Procedure,
"Consult_perio" = "Consult (severe periodontitis)",
"Consult_simple" = "Consult (healthy/mild periodontitis)",
"Denture" = "Denture Fabrication",
"Denture_repair" = "Denture Repair",
"Full_fixed" = "Full-arch Fixed Prosthesis",
"GTR" = "Regenerative Surgery",
"Implant_surgery" = "Implant Surgery (full-arch prostheses)",
"Maintenance_perio" = "Maintenance (severe periodontitis)",
"Maintenance_simp" = "Maintenance (healthy/mild periodontitis)",
"OFD" = "Access Flap Surgery",
"OHI" = "Oral Hygiene Education",
"OPG" = "Panoramic Radiograph",
"PA" = "Periapicals",
"Prophy" = "Prophylaxis",
"RootDeb" = "Root Surface Debridement",
"Single_implant" = "Single Implant (prosthesis + placement)"
),
Group = case_when(
Procedure %in% c("Prophylaxis", "Consult (healthy/mild periodontitis)", "Maintenance (healthy/mild periodontitis)") ~ "Preventive",
Procedure %in% c("Panoramic Radiograph", "Periapicals") ~ "Diagnostic",
Procedure %in% c(
"Oral Hygiene Education", "Root Surface Debridement", "Regenerative Surgery",
"Access Flap Surgery", "Maintenance (severe periodontitis)", "Consult (severe periodontitis)"
) ~ "Periodontal treatment",
Procedure == "Extraction" ~ "Extractions",
TRUE ~ "Tooth replacement"
),
global_Mean_total_billions = round(global_Mean_total_billions, 2)
)
# Load your data
df <- read_csv("outputs/global_procedure.csv") %>%
mutate(
Procedure = recode(Procedure,
"Consult_perio" = "Consult (severe periodontitis)",
"Consult_simple" = "Consult (healthy/mild periodontitis)",
"Denture" = "Denture Fabrication",
"Denture_repair" = "Denture Repair",
"Full_fixed" = "Full-arch Fixed Prosthesis",
"GTR" = "Regenerative Surgery",
"Implant_surgery" = "Implant Surgery (full-arch prostheses)",
"Maintenance_perio" = "Maintenance (severe periodontitis)",
"Maintenance_simp" = "Maintenance (healthy/mild periodontitis)",
"OFD" = "Access Flap Surgery",
"OHI" = "Oral Hygiene Education",
"OPG" = "Panoramic Radiograph",
"PA" = "Periapicals",
"Prophy" = "Prophylaxis",
"RootDeb" = "Root Surface Debridement",
"Single_implant" = "Single Implant (prosthesis + placement)"
),
Group = case_when(
Procedure %in% c("Prophylaxis", "Consult (healthy/mild periodontitis)", "Maintenance (healthy/mild periodontitis)") ~ "Preventive",
Procedure %in% c("Panoramic Radiograph", "Periapicals") ~ "Diagnostic",
Procedure %in% c(
"Oral Hygiene Education", "Root Surface Debridement", "Regenerative Surgery",
"Access Flap Surgery", "Maintenance (severe periodontitis)", "Consult (severe periodontitis)"
) ~ "Periodontal treatment",
Procedure == "Extraction" ~ "Extractions",
TRUE ~ "Tooth replacement"
),
global_Mean_total_billions = round(global_Mean_total_billions, 2)
global_WHO_Mean_total_billions = round(global_WHO_Mean_total_billions,2)
# Load your data
df <- read_csv("outputs/global_procedure.csv") %>%
mutate(
Procedure = recode(Procedure,
"Consult_perio" = "Consult (severe periodontitis)",
"Consult_simple" = "Consult (healthy/mild periodontitis)",
"Denture" = "Denture Fabrication",
"Denture_repair" = "Denture Repair",
"Full_fixed" = "Full-arch Fixed Prosthesis",
"GTR" = "Regenerative Surgery",
"Implant_surgery" = "Implant Surgery (full-arch prostheses)",
"Maintenance_perio" = "Maintenance (severe periodontitis)",
"Maintenance_simp" = "Maintenance (healthy/mild periodontitis)",
"OFD" = "Access Flap Surgery",
"OHI" = "Oral Hygiene Education",
"OPG" = "Panoramic Radiograph",
"PA" = "Periapicals",
"Prophy" = "Prophylaxis",
"RootDeb" = "Root Surface Debridement",
"Single_implant" = "Single Implant (prosthesis + placement)"
),
Group = case_when(
Procedure %in% c("Prophylaxis", "Consult (healthy/mild periodontitis)", "Maintenance (healthy/mild periodontitis)") ~ "Preventive",
Procedure %in% c("Panoramic Radiograph", "Periapicals") ~ "Diagnostic",
Procedure %in% c(
"Oral Hygiene Education", "Root Surface Debridement", "Regenerative Surgery",
"Access Flap Surgery", "Maintenance (severe periodontitis)", "Consult (severe periodontitis)"
) ~ "Periodontal treatment",
Procedure == "Extraction" ~ "Extractions",
TRUE ~ "Tooth replacement"
),
global_Mean_total_billions = round(global_Mean_total_billions, 2),
global_WHO_Mean_total_billions = round(global_WHO_Mean_total_billions,2)
)
library(cowplot)
# Plot
treemap <- ggplot(df, aes(
area = global_Mean_total_billions,
fill = Group,
label = paste0(Procedure, "\n", global_Mean_total_billions, "B"),
subgroup = Group
)) +
geom_treemap() +
geom_treemap_subgroup_border(color = "white", size = 2) +
geom_treemap_text(
colour = "grey20",
fontface = "plain",
family = "sans",
place = "centre",
reflow = TRUE,
size = 10
) +
scale_fill_brewer(palette = "Pastel1") +
ggtitle("Based on current utilisation (2021)") +
theme_minimal(base_size = 14) +
theme(
legend.position = "bottom",
plot.title = element_text(color = "grey20", hjust = 0.5, size = 16, face = "bold"),
# plot.subtitle = element_text(color = "grey20", hjust = 0.5, size = 10, face = "bold"),
plot.margin = margin(t = 20, r = 40, b = 20, l = 40)
)
treemap_target <- ggplot(df, aes(
area = global_WHO_Mean_total_billions,
fill = Group,
label = paste0(Procedure, "\n", global_Mean_total_billions, "B"),
subgroup = Group
)) +
geom_treemap() +
geom_treemap_subgroup_border(color = "white", size = 2) +
geom_treemap_text(
colour = "grey20",
fontface = "plain",
family = "sans",
place = "centre",
reflow = TRUE,
size = 10
) +
scale_fill_brewer(palette = "Pastel1") +
ggtitle("Based on WHO target (2021)") +
theme_minimal(base_size = 14) +
theme(
legend.position = "bottom",
plot.title = element_text(color = "grey20", hjust = 0.5, size = 16, face = "bold"),
# plot.subtitle = element_text(color = "grey20", hjust = 0.5, size = 10, face = "bold"),
plot.margin = margin(t = 20, r = 40, b = 20, l = 40)
)
treemap_combined <- treemap + treemap_target
ggsave("outputs/treemap.pdf",
plot = treemap_combined,
width = 20, height = 10, dpi = 300
)
# Plot
treemap <- ggplot(df, aes(
area = global_Mean_total_billions,
fill = Group,
label = paste0(Procedure, "\n", global_Mean_total_billions, "B"),
subgroup = Group
)) +
geom_treemap() +
geom_treemap_subgroup_border(color = "white", size = 2) +
geom_treemap_text(
colour = "grey20",
fontface = "plain",
family = "sans",
place = "centre",
reflow = TRUE,
size = 10
) +
scale_fill_brewer(palette = "Pastel1") +
ggtitle("Based on current utilisation (2021)") +
theme_minimal(base_size = 14) +
theme(
legend.position = "bottom",
plot.title = element_text(color = "grey20", hjust = 0.5, size = 16, face = "bold"),
# plot.subtitle = element_text(color = "grey20", hjust = 0.5, size = 10, face = "bold"),
plot.margin = margin(t = 20, r = 40, b = 20, l = 40)
)
treemap_target <- ggplot(df, aes(
area = global_WHO_Mean_total_billions,
fill = Group,
label = paste0(Procedure, "\n", global_Mean_total_billions, "B"),
subgroup = Group
)) +
geom_treemap() +
geom_treemap_subgroup_border(color = "white", size = 2) +
geom_treemap_text(
colour = "grey20",
fontface = "plain",
family = "sans",
place = "centre",
reflow = TRUE,
size = 10
) +
scale_fill_brewer(palette = "Pastel1") +
ggtitle("Based on WHO target (2021)") +
theme_minimal(base_size = 14) +
theme(
legend.position = "bottom",
plot.title = element_text(color = "grey20", hjust = 0.5, size = 16, face = "bold"),
# plot.subtitle = element_text(color = "grey20", hjust = 0.5, size = 10, face = "bold"),
plot.margin = margin(t = 20, r = 40, b = 20, l = 40)
)
treemap_combined <- treemap + treemap_target
ggsave("outputs/treemap.pdf",
plot = treemap_combined,
width = 20, height = 10, dpi = 300
)
treemap_target <- ggplot(df, aes(
area = global_WHO_Mean_total_billions,
fill = Group,
label = paste0(Procedure, "\n", global_WHO_Mean_total_billions, "B"),
subgroup = Group
)) +
geom_treemap() +
geom_treemap_subgroup_border(color = "white", size = 2) +
geom_treemap_text(
colour = "grey20",
fontface = "plain",
family = "sans",
place = "centre",
reflow = TRUE,
size = 10
) +
scale_fill_brewer(palette = "Pastel1") +
ggtitle("Based on WHO target (2021)") +
theme_minimal(base_size = 14) +
theme(
legend.position = "bottom",
plot.title = element_text(color = "grey20", hjust = 0.5, size = 16, face = "bold"),
# plot.subtitle = element_text(color = "grey20", hjust = 0.5, size = 10, face = "bold"),
plot.margin = margin(t = 20, r = 40, b = 20, l = 40)
)
treemap_combined <- treemap + treemap_target
ggsave("outputs/treemap.pdf",
plot = treemap_combined,
width = 20, height = 10, dpi = 300
)
# Find the maximum value across both area columns to ensure that scaling is equal across both treemaps
max_val <- max(df$global_Mean_total_billions, df$global_WHO_Mean_total_billions, na.rm = TRUE)
df <- df %>%
mutate(
area_current = global_Mean_total_billions / max_val,   # rescaled to [0,1]
area_target  = global_WHO_Mean_total_billions / max_val
)
# Find the maximum value across both area columns to ensure that scaling is equal across both treemaps
max_val <- max(df$global_Mean_total_billions, df$global_WHO_Mean_total_billions, na.rm = TRUE)
df <- df %>%
mutate(
area_current = global_Mean_total_billions / max_val,   # rescaled to [0,1]
area_target  = global_WHO_Mean_total_billions / max_val
)
# Plot
treemap <- ggplot(df, aes(
area = area_current,
area = global_Mean_total_billions,
fill = Group,
label = paste0(Procedure, "\n", global_Mean_total_billions, "B"),
subgroup = Group
)) +
geom_treemap() +
geom_treemap_subgroup_border(color = "white", size = 2) +
geom_treemap_text(
colour = "grey20",
fontface = "plain",
family = "sans",
place = "centre",
reflow = TRUE,
size = 10
) +
scale_fill_brewer(palette = "Pastel1") +
ggtitle("Based on current utilisation (2021)") +
theme_minimal(base_size = 14) +
theme(
legend.position = "bottom",
plot.title = element_text(color = "grey20", hjust = 0.5, size = 16, face = "bold"),
# plot.subtitle = element_text(color = "grey20", hjust = 0.5, size = 10, face = "bold"),
plot.margin = margin(t = 20, r = 40, b = 20, l = 40)
)
treemap_target <- ggplot(df, aes(
area = area_target,
area = global_WHO_Mean_total_billions,
fill = Group,
label = paste0(Procedure, "\n", global_WHO_Mean_total_billions, "B"),
subgroup = Group
)) +
geom_treemap() +
geom_treemap_subgroup_border(color = "white", size = 2) +
geom_treemap_text(
colour = "grey20",
fontface = "plain",
family = "sans",
place = "centre",
reflow = TRUE,
size = 10
) +
scale_fill_brewer(palette = "Pastel1") +
ggtitle("Based on WHO target (2021)") +
theme_minimal(base_size = 14) +
theme(
legend.position = "bottom",
plot.title = element_text(color = "grey20", hjust = 0.5, size = 16, face = "bold"),
# plot.subtitle = element_text(color = "grey20", hjust = 0.5, size = 10, face = "bold"),
plot.margin = margin(t = 20, r = 40, b = 20, l = 40)
)
treemap_combined <- treemap + treemap_target
# Plot
treemap <- ggplot(df, aes(
area = area_current,
# area = global_Mean_total_billions,
fill = Group,
label = paste0(Procedure, "\n", global_Mean_total_billions, "B"),
subgroup = Group
)) +
geom_treemap() +
geom_treemap_subgroup_border(color = "white", size = 2) +
geom_treemap_text(
colour = "grey20",
fontface = "plain",
family = "sans",
place = "centre",
reflow = TRUE,
size = 10
) +
scale_fill_brewer(palette = "Pastel1") +
ggtitle("Based on current utilisation (2021)") +
theme_minimal(base_size = 14) +
theme(
legend.position = "bottom",
plot.title = element_text(color = "grey20", hjust = 0.5, size = 16, face = "bold"),
# plot.subtitle = element_text(color = "grey20", hjust = 0.5, size = 10, face = "bold"),
plot.margin = margin(t = 20, r = 40, b = 20, l = 40)
)
# Plot
treemap <- ggplot(df, aes(
area = area_current,
# area = global_Mean_total_billions,
fill = Group,
label = paste0(Procedure, "\n", global_Mean_total_billions, "B"),
subgroup = Group
)) +
geom_treemap() +
geom_treemap_subgroup_border(color = "white", size = 2) +
geom_treemap_text(
colour = "grey20",
fontface = "plain",
family = "sans",
place = "centre",
reflow = TRUE,
size = 10
) +
scale_fill_brewer(palette = "Pastel1") +
ggtitle("Based on current utilisation (2021)") +
theme_minimal(base_size = 14) +
theme(
legend.position = "bottom",
plot.title = element_text(color = "grey20", hjust = 0.5, size = 16, face = "bold"),
# plot.subtitle = element_text(color = "grey20", hjust = 0.5, size = 10, face = "bold"),
plot.margin = margin(t = 20, r = 40, b = 20, l = 40)
)
treemap_target <- ggplot(df, aes(
area = area_target,
# area = global_WHO_Mean_total_billions,
fill = Group,
label = paste0(Procedure, "\n", global_WHO_Mean_total_billions, "B"),
subgroup = Group
)) +
geom_treemap() +
geom_treemap_subgroup_border(color = "white", size = 2) +
geom_treemap_text(
colour = "grey20",
fontface = "plain",
family = "sans",
place = "centre",
reflow = TRUE,
size = 10
) +
scale_fill_brewer(palette = "Pastel1") +
ggtitle("Based on WHO target (2021)") +
theme_minimal(base_size = 14) +
theme(
legend.position = "bottom",
plot.title = element_text(color = "grey20", hjust = 0.5, size = 16, face = "bold"),
# plot.subtitle = element_text(color = "grey20", hjust = 0.5, size = 10, face = "bold"),
plot.margin = margin(t = 20, r = 40, b = 20, l = 40)
)
treemap_combined <- treemap + treemap_target
ggsave("outputs/treemap.pdf",
plot = treemap_combined,
width = 20, height = 10, dpi = 300
)
library(patchwork)
