scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_color_manual(
name = "Dental Utilisation",
values = colors,
labels = c("High Utilisation", "Medium Utilisation", "Low Utilisation")
) +
scale_shape_manual(
name = "Dental Utilisation",
values = shapes,
labels = c("High Utilisation", "Medium Utilisation", "Low Utilisation")
) +
scale_size_continuous(
name = "GDP per Capita (PPP, 2021)",
range = c(0.05, 5)
)+
labs(
title = "Estimated Periodontal Expenditure as a Share of Total Dental Spending",
subtitle = "Across countries, periodontal expenditure forms a consistent proportion of total dental spending,\nsupporting the plausibility of the estimation model",
x = "Countries ranked by periodontal expenditure",
y = "Periodontal expenditure (% of dental spending)"
) +
theme_minimal(base_family = "sans") +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 10),
legend.position = "bottom",
legend.box = "vertical",
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
plot.margin = margin(30, 30, 30, 30)
)
# Save as PDF
ggsave(
filename = "outputs/periodontal_prop_scatter.pdf",
plot = p,
width = 10,
height = 6.5,
device = cairo_pdf  # Ensures font rendering works well with showtext
)
# Create proportion, median and rank
df <- df %>%
filter (Country != "Global", selected_Mean_total_billions != 0) %>%
mutate(
PerioProp = selected_Mean_total_billions / Dent_exp_usd,
median_value = median(PerioProp),
Rank = rank(selected_Mean_total_billions),
selected_model = factor(selected_model, levels = c("high", "mid", "low")),
ModelLabel = recode(selected_model,
high = "High Utilisation",
mid = "Medium Utilisation",
low = "Low Utilisation")
) %>%
filter (PerioProp < 1)
# Define shapes and colors
shapes <- c(high = 17, mid = 18, low = 15)
colors <- brewer.pal(3, "Pastel1")
names(colors) <- c("high", "mid", "low")
# Create plot
p <- ggplot(df, aes(x = Rank, y = PerioProp * 100, color = selected_model, shape = selected_model)) +
geom_point(aes(size = GDP_per_capita_PPP_2021), alpha = 0.8) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_color_manual(
name = "Dental Utilisation",
values = colors,
labels = c("High Utilisation", "Medium Utilisation", "Low Utilisation")
) +
scale_shape_manual(
name = "Dental Utilisation",
values = shapes,
labels = c("High Utilisation", "Medium Utilisation", "Low Utilisation")
) +
scale_size_continuous(
name = "GDP per Capita (PPP, 2021)",
range = c(0.05, 5)
)+
labs(
title = "Estimated Periodontal Expenditure as a Share of Total Dental Spending",
subtitle = "Across countries, periodontal expenditure forms a consistent proportion of total dental spending,\nsupporting the plausibility of the estimation model",
x = "Countries ranked by periodontal expenditure",
y = "Periodontal expenditure (% of dental spending)"
) +
theme_minimal(base_family = "sans") +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 10),
legend.position = "bottom",
legend.box = "vertical",
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
plot.margin = margin(30, 30, 30, 30)
)
# Save as PDF
ggsave(
filename = "outputs/periodontal_prop_scatter.pdf",
plot = p,
width = 10,
height = 6.5,
device = cairo_pdf  # Ensures font rendering works well with showtext
)
---------------------------------------------------------------------
library(tidyverse)
library(tidyverse)
library(RColorBrewer)
# Load data
df <- read_csv("outputs/short_final_selected_output.csv")
# Create proportion, median and rank
df <- df %>%
filter (Country != "Global", selected_Mean_total_billions != 0) %>%
mutate(
PerioProp = selected_Mean_total_billions / Dent_exp_usd,
median_value = median(PerioProp),
Rank = rank(selected_Mean_total_billions),
selected_model = factor(selected_model, levels = c("high", "mid", "low")),
ModelLabel = recode(selected_model,
high = "High Utilisation",
mid = "Medium Utilisation",
low = "Low Utilisation")
) %>%
filter (PerioProp < 1)
# Define shapes and colors
shapes <- c(high = 17, mid = 18, low = 15)
colors <- brewer.pal(3, "Pastel1")
names(colors) <- c("high", "mid", "low")
# Create plot
p <- ggplot(df, aes(x = Rank, y = PerioProp * 100, color = selected_model, shape = selected_model)) +
geom_point(aes(size = Dent_exppc_usd), alpha = 0.8) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_color_manual(
name = "Dental Utilisation",
values = colors,
labels = c("High Utilisation", "Medium Utilisation", "Low Utilisation")
) +
scale_shape_manual(
name = "Dental Utilisation",
values = shapes,
labels = c("High Utilisation", "Medium Utilisation", "Low Utilisation")
) +
scale_size_continuous(
name = "Dental Expenditure Per Capita",
range = c(0.05, 5)
)+
labs(
title = "Estimated Periodontal Expenditure as a Share of Total Dental Spending",
subtitle = "Across countries, periodontal expenditure forms a reasonable proportion of total dental spending,\nsupporting the plausibility of the estimation model",
x = "Countries ranked by periodontal expenditure",
y = "Periodontal expenditure (% of dental spending)"
) +
theme_minimal(base_family = "sans") +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 10),
legend.position = "bottom",
legend.box = "vertical",
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
plot.margin = margin(30, 30, 30, 30)
)
# Save as PDF
ggsave(
filename = "outputs/periodontal_prop_scatter.pdf",
plot = p,
width = 10,
height = 6.5,
device = cairo_pdf  # Ensures font rendering works well with showtext
)
# Create plot
p <- ggplot(df, aes(x = Rank, y = PerioProp * 100, color = selected_model, shape = selected_model)) +
geom_point(aes(size = Dent_exppc_usd), alpha = 0.8) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_color_manual(
name = "Dental Utilisation",
values = colors,
labels = c("High Utilisation", "Medium Utilisation", "Low Utilisation")
) +
scale_shape_manual(
name = "Dental Utilisation",
values = shapes,
labels = c("High Utilisation", "Medium Utilisation", "Low Utilisation")
) +
scale_size_continuous(
name = "Dental Expenditure Per Capita",
range = c(0.05, 5),
labels = scales::dollar
)+
labs(
title = "Estimated Periodontal Expenditure as a Share of Total Dental Spending",
subtitle = "Across countries, periodontal expenditure forms a reasonable proportion of total dental spending,\nsupporting the plausibility of the estimation model",
x = "Countries ranked by periodontal expenditure",
y = "Periodontal expenditure (% of dental spending)"
) +
theme_minimal(base_family = "sans") +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 10),
legend.position = "bottom",
legend.box = "vertical",
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
plot.margin = margin(30, 30, 30, 30)
)
# Save as PDF
ggsave(
filename = "outputs/periodontal_prop_scatter.pdf",
plot = p,
width = 10,
height = 6.5,
device = cairo_pdf  # Ensures font rendering works well with showtext
)
View(df)
# Create plot
p <- ggplot(df, aes(x = Rank, y = PerioProp * 100, color = selected_model, shape = selected_model)) +
geom_point(aes(size = Dent_exppc_usd), alpha = 0.8) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_color_manual(
name = "Dental Utilisation",
values = colors,
labels = c("High Utilisation", "Medium Utilisation", "Low Utilisation")
) +
scale_shape_manual(
name = "Dental Utilisation",
values = shapes,
labels = c("High Utilisation", "Medium Utilisation", "Low Utilisation")
) +
scale_size_continuous(
name = "Dental Expenditure Per Capita (USD)",
range = c(0.05, 5),
labels = scales::dollar
)+
labs(
title = "Estimated Periodontal Expenditure as a Share of Total Dental Spending",
subtitle = "Across countries, periodontal expenditure forms a reasonable proportion of total dental spending,\nincreasing with dental expenditure per capita, supporting the plausibility of the estimation model",
x = "Countries ranked by periodontal expenditure",
y = "Periodontal expenditure (% of dental spending)"
) +
theme_minimal(base_family = "sans") +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 10),
legend.position = "bottom",
legend.box = "vertical",
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
plot.margin = margin(30, 30, 30, 30)
)
# Save as PDF
ggsave(
filename = "outputs/periodontal_prop_scatter.pdf",
plot = p,
width = 10,
height = 6.5,
device = cairo_pdf  # Ensures font rendering works well with showtext
)
library(tidyverse)
library(RColorBrewer)
# Load data
df <- read_csv("outputs/short_final_selected_output.csv")
# Create proportion, median and rank
df <- df %>%
filter (Country != "Global", selected_Mean_total_billions != 0) %>%
mutate(
PerioProp = selected_Mean_total_billions / Dent_exp_usd,
median_value = median(PerioProp),
Rank = rank(selected_Mean_total_billions),
selected_model = factor(selected_model, levels = c("high", "mid", "low")),
ModelLabel = recode(selected_model,
high = "High Utilisation",
mid = "Medium Utilisation",
low = "Low Utilisation")
) %>%
filter (PerioProp < 1)
# Define shapes and colors
shapes <- c(high = 17, mid = 18, low = 15)
colors <- brewer.pal(3, "Pastel1")
names(colors) <- c("high", "mid", "low")
# Create plot
p <- ggplot(df, aes(x = Rank, y = PerioProp * 100, color = selected_model, shape = selected_model)) +
geom_point(aes(size = Dent_exppc_usd), alpha = 0.8) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_color_manual(
name = "Dental Utilisation",
values = colors,
labels = c("High Utilisation", "Medium Utilisation", "Low Utilisation")
) +
scale_shape_manual(
name = "Dental Utilisation",
values = shapes,
labels = c("High Utilisation", "Medium Utilisation", "Low Utilisation")
) +
scale_size_continuous(
name = "Dental Expenditure Per Capita (USD)",
range = c(0.05, 5),
labels = scales::dollar
)+
labs(
title = "Estimated Periodontal Expenditure as a Share of Total Dental Spending",
subtitle = "Across countries, periodontal expenditure forms a reasonable proportion of total dental spending,\nincreasing with dental expenditure per capita, supporting the plausibility of the estimation model",
x = "Countries ranked by periodontal expenditure",
y = "Periodontal expenditure (% of dental spending)"
) +
theme_minimal(base_family = "sans") +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 10),
legend.position = "bottom",
legend.box = "vertical",
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
plot.margin = margin(30, 30, 30, 30)
)
# Save as PDF
ggsave(
filename = "outputs/periodontal_prop_scatter.pdf",
plot = p,
width = 10,
height = 6.5,
device = cairo_pdf  # Ensures font rendering works well with showtext
)
ggplot(df, aes(x = selected_model, y = Dent_exppc_usd, color = selected_model)) +
geom_jitter(width = 0.2, size = 2, alpha = 0.6) +
scale_color_brewer(palette = "Pastel1") +
labs(
x = "Dental Utilisation Scenario",
y = "Dental Expenditure per Capita (USD)",
title = "Per-Capita Dental Expenditure by Utilisation Scenario"
) +
theme_minimal()
ggplot(df, aes(x = selected_model, y = GDP_per_capita_PPP_2021, color = selected_model)) +
geom_jitter(width = 0.2, size = 2, alpha = 0.6) +
scale_color_brewer(palette = "Pastel1") +
labs(
x = "Dental Utilisation Scenario",
y = "Dental Expenditure per Capita (USD)",
title = "Per-Capita Dental Expenditure by Utilisation Scenario"
) +
theme_minimal()
renv::snapshot()
ggplot(df, aes(x = selected_model, y = Dent_exppc_usd, color = selected_model)) +
geom_jitter(width = 0.2, size = 2, alpha = 0.6) +
scale_color_brewer(palette = "Pastel1") +
labs(
x = "Dental Utilisation Scenario",
y = "Dental Expenditure per Capita (USD)",
title = "Per-Capita Dental Expenditure by Utilisation Scenario"
) +
theme_minimal()
library(tidyverse)
# Load data
df <- read_csv("outputs/short_final_selected_output.csv")
ggplot(df, aes(x = selected_model, y = Dent_exppc_usd, color = selected_model)) +
geom_jitter(width = 0.2, size = 2, alpha = 0.6) +
scale_color_brewer(palette = "Pastel1") +
labs(
x = "Dental Utilisation Scenario",
y = "Dental Expenditure per Capita (USD)",
title = "Per-Capita Dental Expenditure by Utilisation Scenario"
) +
theme_minimal()
# Load data
df <- read_csv("outputs/short_final_selected_output.csv")  %>%
filter (Country != "Global", selected_Mean_total_billions != 0)
ggplot(df, aes(x = selected_model, y = Dent_exppc_usd, color = selected_model)) +
geom_jitter(width = 0.2, size = 2, alpha = 0.6) +
scale_color_brewer(palette = "Pastel1") +
labs(
x = "Dental Utilisation Scenario",
y = "Dental Expenditure per Capita (USD)",
title = "Per-Capita Dental Expenditure by Utilisation Scenario"
) +
theme_minimal()
# Load data
df <- read_csv("outputs/short_final_selected_output.csv")   %>%
filter (Country != "Global", selected_Mean_total_billions != 0) %>%
mutate(
PerioProp = selected_Mean_total_billions / Dent_exp_usd,
median_value = median(PerioProp),
Rank = rank(selected_Mean_total_billions),
selected_model = factor(selected_model, levels = c("high", "mid", "low")),
ModelLabel = recode(selected_model,
high = "High Utilisation",
mid = "Medium Utilisation",
low = "Low Utilisation")
)
ggplot(df, aes(x = selected_model, y = Dent_exppc_usd, color = selected_model)) +
geom_jitter(width = 0.2, size = 2, alpha = 0.6) +
scale_color_brewer(palette = "Pastel1") +
labs(
x = "Dental Utilisation Scenario",
y = "Dental Expenditure per Capita (USD)",
title = "Per-Capita Dental Expenditure by Utilisation Scenario"
) +
theme_minimal()
ggplot(df, aes(x = selected_model, y = Dent_exppc_usd, color = selected_model)) +
geom_jitter(width = 0.2, size = 2, alpha = 0.9) +
scale_color_brewer(palette = "Pastel1") +
labs(
x = "Dental Utilisation Scenario",
y = "Dental Expenditure per Capita (USD)",
title = "Per-Capita Dental Expenditure by Utilisation Scenario"
) +
theme_minimal()
library(tidyverse)
# Load data
df <- read_csv("outputs/short_final_selected_output.csv")   %>%
filter (Country != "Global", selected_Mean_total_billions != 0) %>%
mutate(
PerioProp = selected_Mean_total_billions / Dent_exp_usd,
median_value = median(PerioProp),
Rank = rank(selected_Mean_total_billions),
selected_model = factor(selected_model, levels = c("high", "mid", "low")),
ModelLabel = recode(selected_model,
high = "High Utilisation",
mid = "Medium Utilisation",
low = "Low Utilisation")
)
ggplot(df, aes(x = selected_model, y = Dent_exppc_usd, color = selected_model)) +
geom_jitter(width = 0.2, size = 2, alpha = 0.9) +
scale_color_brewer(palette = "Pastel1") +
labs(
x = "Dental Utilisation Scenario",
y = "Dental Expenditure per Capita (USD)",
title = "Per-Capita Dental Expenditure by Utilisation Scenario"
) +
theme_minimal(base_family = "sans") +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 10),
legend.position = "bottom",
legend.box = "vertical",
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
plot.margin = margin(30, 30, 30, 30)
)
jitter_plot <- ggplot(df, aes(x = selected_model, y = Dent_exppc_usd, color = selected_model)) +
geom_jitter(width = 0.2, size = 2, alpha = 0.9) +
scale_color_brewer(palette = "Pastel1") +
labs(
x = "Dental Utilisation Scenario",
y = "Dental Expenditure per Capita (USD)",
title = "Per-Capita Dental Expenditure by Utilisation Scenario"
) +
theme_minimal(base_family = "sans") +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 10),
legend.position = "bottom",
legend.box = "vertical",
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
plot.margin = margin(30, 40, 40, 30)
)
# Save as PNG
ggsave(
filename = "outputs/jitter_dental_expenditure_against_scenario.pdf",
plot = jitter_plot,
width = 9,
height = 8,
dpi = 300
)
library(tidyverse)
inequality <- read_csv("income_inequality_database.csv")
View(inequality)
renv::init()
# Call the new scenario runner
run_cost_model_scenarios(
countries_path = countries_path,
procedure_lookup_high_path = procedure_lookup_high_path,
procedure_lookup_mid_path = procedure_lookup_mid_path,
procedure_lookup_low_path = procedure_lookup_low_path,
tx_split_high_path = tx_split_high_path,
tx_split_mid_path = tx_split_mid_path,
tx_split_low_path = tx_split_low_path,
severity_split_path = severity_split_path,
n_sims = n_sims,
output_dir = output_dir,
scenarios = "high", # same as before
slice_size = 999
)
source("./99_functions.R")
# ============================================================================
# Load packages
# ============================================================================
library(tidyverse) # DPLYR IS PART OF TIDYVERSE - NO NEED TO CALL BOTH
library(MCMCpack)
countries_path <- "./data/combined_country_input.csv"
procedure_lookup_high_path <- "./data/procedure_lookup.csv"
procedure_lookup_mid_path <- "./data/procedure_lookup.csv"
#  procedure_lookup_high_path <- "./data/procedure_lookup_increased_maintenance.csv"   #for various scenarios
#  procedure_lookup_mid_path  <- "./data/procedure_lookup_increased_maintenance.csv"
procedure_lookup_low_path <- "./data/procedure_lookup_low_scenario.csv"
#  procedure_lookup_low_path  <- "./data/procedure_lookup_low_scenario_increased_maintenance.csv"
tx_split_high_path <- "./data/tx_split.csv"
tx_split_mid_path <- "./data/tx_split_mid_scenario.csv"
tx_split_low_path <- "./data/tx_split_low_scenario.csv"
severity_split_path <- "./data/severity_split.csv"
# Where to write outputs
output_dir <- "outputs"
n_sims = 30000
# Call the new scenario runner
run_cost_model_scenarios(
countries_path = countries_path,
procedure_lookup_high_path = procedure_lookup_high_path,
procedure_lookup_mid_path = procedure_lookup_mid_path,
procedure_lookup_low_path = procedure_lookup_low_path,
tx_split_high_path = tx_split_high_path,
tx_split_mid_path = tx_split_mid_path,
tx_split_low_path = tx_split_low_path,
severity_split_path = severity_split_path,
n_sims = n_sims,
output_dir = output_dir,
scenarios = "high", # same as before
slice_size = 999
)
